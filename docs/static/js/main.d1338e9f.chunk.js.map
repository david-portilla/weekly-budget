{"version":3,"sources":["components/Error.js","components/Form.js","helpers/helpers.js","components/HandleBudget.js","components/Expense.js","components/List.js","components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["Error","msg","className","Form","setExpense","setCreateExpense","useState","name","setName","amount","setAmount","error","setError","onSubmit","e","preventDefault","isNaN","trim","expense","id","shortid","generate","htmlFor","type","placeholder","value","onChange","target","parseInt","checkBudget","budget","remainBudget","HandleBudget","Expense","List","expenses","map","Question","saveBudget","setRemainBudget","updateQuestion","App","showQuestion","setQuestion","setExpenses","createExpense","useEffect","remain","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1338e9f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Error = ({ msg }) => {\n  return (\n    <p className=\"alert alert-danger error\">{ msg }</p>\n  )\n}\n\nError.propTypes = {\n  msg: PropTypes.string.isRequired\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Error from './Error'\nimport shortid from 'shortid'\n\nconst Form = ({ setExpense, setCreateExpense }) => {\n\n  const [ name, setName ] = useState('')\n  const [ amount, setAmount ] = useState(0)\n  const [ error, setError ] = useState(false)\n\n  const saveName = e => {\n    setName(e.target.value)\n  }\n\n  const saveAmount = e => {\n    setAmount(parseInt(e.target.value, 10))\n  }\n\n  // Add expense to global state\n  const addExpense = e => {\n    e.preventDefault()\n\n    // Validate value\n    if (amount < 1 || isNaN(amount) || name.trim() === '') {\n      setError(true)\n      return\n    }\n\n    // Save expense\n    setError(false)\n\n    // expense object\n    const expense = {\n      name,\n      amount,\n      id: shortid.generate()\n    }\n\n    // add new expense to main content\n    setExpense(expense)\n    setCreateExpense(true)\n    setName('')\n    setAmount(0)\n  }\n\n  return (\n    <form\n      onSubmit={ addExpense }\n    >\n      <h2>Add your expenses here</h2>\n\n      { error ? <Error msg=\"Both fiels are mandatory or incorrect value on expense\" /> : null }\n\n      <div className=\"campo\">\n        <label htmlFor=\"expense-name\">Expense name</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          id=\"expense-name\"\n          placeholder=\"Ex. Metro\"\n          value={ name }\n          onChange={ saveName }\n        />\n      </div>\n\n      <div className=\"campo\">\n        <label htmlFor=\"expense-amount\">Expense amount</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          id=\"expense-amount\"\n          placeholder=\"Ex. 200\"\n          value={ amount }\n          onChange={ saveAmount }\n        />\n      </div>\n\n      <input\n        type=\"submit\"\n        className=\"button-primary u-full-width\"\n        value=\"Add expense\"\n      />\n\n    </form>\n  )\n}\n\nForm.propTypes = {\n  setExpense: PropTypes.func.isRequired,\n  setCreateExpense: PropTypes.func.isRequired\n}\n\nexport default Form\n","export const checkBudget = (budget, remainBudget) => {\n  let styleClass\n  // > 25%\n  if ((budget / 4) > remainBudget) {\n    styleClass = 'alert alert-danger'\n  } else if ((budget / 2) > remainBudget) {\n    // > 50%\n    styleClass = 'alert alert-warning'\n  } else {\n    styleClass = 'alert alert-success'\n  }\n\n  return styleClass\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { checkBudget } from '../helpers/helpers'\n\nconst HandleBudget = ({ budget, remainBudget }) => {\n  return (\n    <>\n      <div className=\"alert alert-primary\">\n        Budget: ${ budget }\n      </div>\n\n      <div className={ checkBudget(budget, remainBudget) }>\n        Remaining budget: ${ remainBudget }\n      </div>\n    </>\n  )\n}\n\nHandleBudget.propTypes = {\n  budget: PropTypes.number.isRequired,\n  remainBudget: PropTypes.number.isRequired\n}\n\nexport default HandleBudget\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Expense = ({ expense }) => (\n  <li className=\"gastos\">\n    <p>{ expense.name }\n      <span className=\"gasto\">${ expense.amount }</span>\n    </p>\n  </li>\n)\n\nExpense.propTypes = {\n  expense: PropTypes.object.isRequired\n}\n\nexport default Expense\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Expense from './Expense'\n\nconst List = ({ expenses }) => {\n  return (\n    <div className=\"gastos-realizados\">\n      <h2>Expense list</h2>\n      {expenses.map(expense => (\n        <Expense\n          key={ expense.id }\n          expense={ expense }\n        />\n      ))\n      }\n    </div>\n  )\n}\n\nList.propTypes = {\n  expenses: PropTypes.array.isRequired\n}\n\nexport default List\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Error from './Error'\n\nconst Question = ({ saveBudget, setRemainBudget, updateQuestion }) => {\n\n  const [ amount, setAmount ] = useState(0)\n  const [ error, setError ] = useState(false)\n\n  // Save the budget on the state\n  const setBudget = e => {\n    setAmount(parseInt(e.target.value, 10))\n  }\n  // Add the budget to the list\n  const addBudget = e => {\n    e.preventDefault()\n\n    // Validate value\n    if (amount < 1 || isNaN(amount)) {\n      setError(true)\n      return\n    }\n\n    // Save amount\n    setError(false)\n    saveBudget(amount)\n    setRemainBudget(amount)\n    updateQuestion(false)\n  }\n\n  return (\n    <>\n      <h3>Add your $$$ budget for this week</h3>\n\n      { error ? <Error msg=\"This is not a right value\" /> : null }\n\n      <form\n        onSubmit={ addBudget }\n      >\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Add an estimate of your budget\"\n          onChange={ setBudget }\n        />\n\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Set budget\"\n        />\n\n      </form>\n    </>\n  )\n}\n\nQuestion.propTypes = {\n  saveBudget: PropTypes.func.isRequired,\n  setRemainBudget: PropTypes.func.isRequired,\n  updateQuestion: PropTypes.func.isRequired,\n}\n\nexport default Question\n","import { useEffect, useState } from 'react';\nimport Form from './components/Form';\nimport HandleBudget from './components/HandleBudget';\nimport List from './components/List';\nimport Question from './components/Question';\n\nfunction App () {\n\n  // Define initial budget\n  const [ budget, saveBudget ] = useState(0)\n  const [ remainBudget, setRemainBudget ] = useState(0)\n  const [ showQuestion, setQuestion ] = useState(true)\n  const [ expenses, setExpenses ] = useState([])\n  const [ expense, setExpense ] = useState([])\n  const [ createExpense, setCreateExpense ] = useState(false)\n\n  useEffect(() => {\n    if (createExpense) {\n      // add new expense\n      setExpenses([\n        ...expenses,\n        expense\n      ])\n      // update remain buget\n      const remain = remainBudget - expense.amount\n      setRemainBudget(remain)\n    }\n    setCreateExpense(false)\n  }, [ expense ])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Weekly budget</h1>\n      </header>\n\n      <div className=\"contenido-principal contenido\">\n        { showQuestion ?\n          (\n            <Question\n              saveBudget={ saveBudget }\n              setRemainBudget={ setRemainBudget }\n              updateQuestion={ setQuestion }\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Form\n                  setExpense={ setExpense }\n                  setCreateExpense={ setCreateExpense }\n                />\n              </div>\n\n              <div className=\"one-half column\">\n                <List\n                  expenses={ expenses }\n                />\n                <HandleBudget\n                  budget={ budget }\n                  remainBudget={ remainBudget }\n                />\n              </div>\n\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}